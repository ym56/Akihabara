// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protofiles/framework/formats/landmark.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Akihabara.Framework.Protobuf
{

    /// <summary>Holder for reflection information generated from protofiles/framework/formats/landmark.proto</summary>
    public static partial class LandmarkReflection
    {

        #region Descriptor
        /// <summary>File descriptor for protofiles/framework/formats/landmark.proto</summary>
        public static pbr::FileDescriptor Descriptor
        {
            get { return descriptor; }
        }
        private static pbr::FileDescriptor descriptor;

        static LandmarkReflection()
        {
            byte[] descriptorData = global::System.Convert.FromBase64String(
                string.Concat(
                  "Citwcm90b2ZpbGVzL2ZyYW1ld29yay9mb3JtYXRzL2xhbmRtYXJrLnByb3Rv",
                  "Ehxha2loYWJhcmEuZnJhbWV3b3JrLnByb3RvYnVmIlEKCExhbmRtYXJrEgkK",
                  "AXgYASABKAISCQoBeRgCIAEoAhIJCgF6GAMgASgCEhIKCnZpc2liaWxpdHkY",
                  "BCABKAISEAoIcHJlc2VuY2UYBSABKAIiSAoMTGFuZG1hcmtMaXN0EjgKCGxh",
                  "bmRtYXJrGAEgAygLMiYuYWtpaGFiYXJhLmZyYW1ld29yay5wcm90b2J1Zi5M",
                  "YW5kbWFyayJbChJOb3JtYWxpemVkTGFuZG1hcmsSCQoBeBgBIAEoAhIJCgF5",
                  "GAIgASgCEgkKAXoYAyABKAISEgoKdmlzaWJpbGl0eRgEIAEoAhIQCghwcmVz",
                  "ZW5jZRgFIAEoAiJcChZOb3JtYWxpemVkTGFuZG1hcmtMaXN0EkIKCGxhbmRt",
                  "YXJrGAEgAygLMjAuYWtpaGFiYXJhLmZyYW1ld29yay5wcm90b2J1Zi5Ob3Jt",
                  "YWxpemVkTGFuZG1hcms="));
            descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
                new pbr::FileDescriptor[] { },
                new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Akihabara.Framework.Protobuf.Landmark), global::Akihabara.Framework.Protobuf.Landmark.Parser, new[]{ "X", "Y", "Z", "Visibility", "Presence" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Akihabara.Framework.Protobuf.LandmarkList), global::Akihabara.Framework.Protobuf.LandmarkList.Parser, new[]{ "Landmark" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Akihabara.Framework.Protobuf.NormalizedLandmark), global::Akihabara.Framework.Protobuf.NormalizedLandmark.Parser, new[]{ "X", "Y", "Z", "Visibility", "Presence" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Akihabara.Framework.Protobuf.NormalizedLandmarkList), global::Akihabara.Framework.Protobuf.NormalizedLandmarkList.Parser, new[]{ "Landmark" }, null, null, null, null)
                }));
        }
        #endregion

    }
    #region Messages
    /// <summary>
    /// A landmark that can have 1 to 3 dimensions. Use x for 1D points, (x, y) for
    /// 2D points and (x, y, z) for 3D points. For more dimensions, consider using
    /// matrix_data.proto.
    /// </summary>
    public sealed partial class Landmark : pb::IMessage<Landmark>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<Landmark> _parser = new pb::MessageParser<Landmark>(() => new Landmark());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Landmark> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Akihabara.Framework.Protobuf.LandmarkReflection.Descriptor.MessageTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Landmark()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Landmark(Landmark other) : this()
        {
            _hasBits0 = other._hasBits0;
            x_ = other.x_;
            y_ = other.y_;
            z_ = other.z_;
            visibility_ = other.visibility_;
            presence_ = other.presence_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Landmark Clone()
        {
            return new Landmark(this);
        }

        /// <summary>Field number for the "x" field.</summary>
        public const int XFieldNumber = 1;
        private readonly static float XDefaultValue = 0F;

        private float x_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float X
        {
            get { if ((_hasBits0 & 1) != 0) { return x_; } else { return XDefaultValue; } }
            set
            {
                _hasBits0 |= 1;
                x_ = value;
            }
        }
        /// <summary>Gets whether the "x" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasX
        {
            get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "x" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearX()
        {
            _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "y" field.</summary>
        public const int YFieldNumber = 2;
        private readonly static float YDefaultValue = 0F;

        private float y_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float Y
        {
            get { if ((_hasBits0 & 2) != 0) { return y_; } else { return YDefaultValue; } }
            set
            {
                _hasBits0 |= 2;
                y_ = value;
            }
        }
        /// <summary>Gets whether the "y" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasY
        {
            get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "y" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearY()
        {
            _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "z" field.</summary>
        public const int ZFieldNumber = 3;
        private readonly static float ZDefaultValue = 0F;

        private float z_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float Z
        {
            get { if ((_hasBits0 & 4) != 0) { return z_; } else { return ZDefaultValue; } }
            set
            {
                _hasBits0 |= 4;
                z_ = value;
            }
        }
        /// <summary>Gets whether the "z" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasZ
        {
            get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "z" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearZ()
        {
            _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "visibility" field.</summary>
        public const int VisibilityFieldNumber = 4;
        private readonly static float VisibilityDefaultValue = 0F;

        private float visibility_;
        /// <summary>
        /// Landmark visibility. Should stay unset if not supported.
        /// Float score of whether landmark is visible or occluded by other objects.
        /// Landmark considered as invisible also if it is not present on the screen
        /// (out of scene bounds). Depending on the model, visibility value is either a
        /// sigmoid or an argument of sigmoid.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float Visibility
        {
            get { if ((_hasBits0 & 8) != 0) { return visibility_; } else { return VisibilityDefaultValue; } }
            set
            {
                _hasBits0 |= 8;
                visibility_ = value;
            }
        }
        /// <summary>Gets whether the "visibility" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasVisibility
        {
            get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "visibility" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearVisibility()
        {
            _hasBits0 &= ~8;
        }

        /// <summary>Field number for the "presence" field.</summary>
        public const int PresenceFieldNumber = 5;
        private readonly static float PresenceDefaultValue = 0F;

        private float presence_;
        /// <summary>
        /// Landmark presence. Should stay unset if not supported.
        /// Float score of whether landmark is present on the scene (located within
        /// scene bounds). Depending on the model, presence value is either a result of
        /// sigmoid or an argument of sigmoid function to get landmark presence
        /// probability.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float Presence
        {
            get { if ((_hasBits0 & 16) != 0) { return presence_; } else { return PresenceDefaultValue; } }
            set
            {
                _hasBits0 |= 16;
                presence_ = value;
            }
        }
        /// <summary>Gets whether the "presence" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPresence
        {
            get { return (_hasBits0 & 16) != 0; }
        }
        /// <summary>Clears the value of the "presence" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPresence()
        {
            _hasBits0 &= ~16;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as Landmark);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Landmark other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
            if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
            if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
            if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Visibility, other.Visibility)) return false;
            if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Presence, other.Presence)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (HasX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
            if (HasY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
            if (HasZ) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
            if (HasVisibility) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Visibility);
            if (HasPresence) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Presence);
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (HasX) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (HasY) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (HasZ) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (HasVisibility) {
        output.WriteRawTag(37);
        output.WriteFloat(Visibility);
      }
      if (HasPresence) {
        output.WriteRawTag(45);
        output.WriteFloat(Presence);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (HasX)
            {
                output.WriteRawTag(13);
                output.WriteFloat(X);
            }
            if (HasY)
            {
                output.WriteRawTag(21);
                output.WriteFloat(Y);
            }
            if (HasZ)
            {
                output.WriteRawTag(29);
                output.WriteFloat(Z);
            }
            if (HasVisibility)
            {
                output.WriteRawTag(37);
                output.WriteFloat(Visibility);
            }
            if (HasPresence)
            {
                output.WriteRawTag(45);
                output.WriteFloat(Presence);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (HasX)
            {
                size += 1 + 4;
            }
            if (HasY)
            {
                size += 1 + 4;
            }
            if (HasZ)
            {
                size += 1 + 4;
            }
            if (HasVisibility)
            {
                size += 1 + 4;
            }
            if (HasPresence)
            {
                size += 1 + 4;
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Landmark other)
        {
            if (other == null)
            {
                return;
            }
            if (other.HasX)
            {
                X = other.X;
            }
            if (other.HasY)
            {
                Y = other.Y;
            }
            if (other.HasZ)
            {
                Z = other.Z;
            }
            if (other.HasVisibility)
            {
                Visibility = other.Visibility;
            }
            if (other.HasPresence)
            {
                Presence = other.Presence;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
          case 37: {
            Visibility = input.ReadFloat();
            break;
          }
          case 45: {
            Presence = input.ReadFloat();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 13:
                        {
                            X = input.ReadFloat();
                            break;
                        }
                    case 21:
                        {
                            Y = input.ReadFloat();
                            break;
                        }
                    case 29:
                        {
                            Z = input.ReadFloat();
                            break;
                        }
                    case 37:
                        {
                            Visibility = input.ReadFloat();
                            break;
                        }
                    case 45:
                        {
                            Presence = input.ReadFloat();
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    /// Group of Landmark protos.
    /// </summary>
    public sealed partial class LandmarkList : pb::IMessage<LandmarkList>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<LandmarkList> _parser = new pb::MessageParser<LandmarkList>(() => new LandmarkList());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<LandmarkList> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Akihabara.Framework.Protobuf.LandmarkReflection.Descriptor.MessageTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public LandmarkList()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public LandmarkList(LandmarkList other) : this()
        {
            landmark_ = other.landmark_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public LandmarkList Clone()
        {
            return new LandmarkList(this);
        }

        /// <summary>Field number for the "landmark" field.</summary>
        public const int LandmarkFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Akihabara.Framework.Protobuf.Landmark> _repeated_landmark_codec
            = pb::FieldCodec.ForMessage(10, global::Akihabara.Framework.Protobuf.Landmark.Parser);
        private readonly pbc::RepeatedField<global::Akihabara.Framework.Protobuf.Landmark> landmark_ = new pbc::RepeatedField<global::Akihabara.Framework.Protobuf.Landmark>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Akihabara.Framework.Protobuf.Landmark> Landmark
        {
            get { return landmark_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as LandmarkList);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(LandmarkList other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!landmark_.Equals(other.landmark_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= landmark_.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      landmark_.WriteTo(output, _repeated_landmark_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            landmark_.WriteTo(ref output, _repeated_landmark_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            size += landmark_.CalculateSize(_repeated_landmark_codec);
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(LandmarkList other)
        {
            if (other == null)
            {
                return;
            }
            landmark_.Add(other.landmark_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            landmark_.AddEntriesFrom(input, _repeated_landmark_codec);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            landmark_.AddEntriesFrom(ref input, _repeated_landmark_codec);
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    /// A normalized version of above Landmark proto. All coordinates should be
    /// within [0, 1].
    /// </summary>
    public sealed partial class NormalizedLandmark : pb::IMessage<NormalizedLandmark>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<NormalizedLandmark> _parser = new pb::MessageParser<NormalizedLandmark>(() => new NormalizedLandmark());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<NormalizedLandmark> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Akihabara.Framework.Protobuf.LandmarkReflection.Descriptor.MessageTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NormalizedLandmark()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NormalizedLandmark(NormalizedLandmark other) : this()
        {
            _hasBits0 = other._hasBits0;
            x_ = other.x_;
            y_ = other.y_;
            z_ = other.z_;
            visibility_ = other.visibility_;
            presence_ = other.presence_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NormalizedLandmark Clone()
        {
            return new NormalizedLandmark(this);
        }

        /// <summary>Field number for the "x" field.</summary>
        public const int XFieldNumber = 1;
        private readonly static float XDefaultValue = 0F;

        private float x_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float X
        {
            get { if ((_hasBits0 & 1) != 0) { return x_; } else { return XDefaultValue; } }
            set
            {
                _hasBits0 |= 1;
                x_ = value;
            }
        }
        /// <summary>Gets whether the "x" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasX
        {
            get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "x" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearX()
        {
            _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "y" field.</summary>
        public const int YFieldNumber = 2;
        private readonly static float YDefaultValue = 0F;

        private float y_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float Y
        {
            get { if ((_hasBits0 & 2) != 0) { return y_; } else { return YDefaultValue; } }
            set
            {
                _hasBits0 |= 2;
                y_ = value;
            }
        }
        /// <summary>Gets whether the "y" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasY
        {
            get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "y" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearY()
        {
            _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "z" field.</summary>
        public const int ZFieldNumber = 3;
        private readonly static float ZDefaultValue = 0F;

        private float z_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float Z
        {
            get { if ((_hasBits0 & 4) != 0) { return z_; } else { return ZDefaultValue; } }
            set
            {
                _hasBits0 |= 4;
                z_ = value;
            }
        }
        /// <summary>Gets whether the "z" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasZ
        {
            get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "z" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearZ()
        {
            _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "visibility" field.</summary>
        public const int VisibilityFieldNumber = 4;
        private readonly static float VisibilityDefaultValue = 0F;

        private float visibility_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float Visibility
        {
            get { if ((_hasBits0 & 8) != 0) { return visibility_; } else { return VisibilityDefaultValue; } }
            set
            {
                _hasBits0 |= 8;
                visibility_ = value;
            }
        }
        /// <summary>Gets whether the "visibility" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasVisibility
        {
            get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "visibility" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearVisibility()
        {
            _hasBits0 &= ~8;
        }

        /// <summary>Field number for the "presence" field.</summary>
        public const int PresenceFieldNumber = 5;
        private readonly static float PresenceDefaultValue = 0F;

        private float presence_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float Presence
        {
            get { if ((_hasBits0 & 16) != 0) { return presence_; } else { return PresenceDefaultValue; } }
            set
            {
                _hasBits0 |= 16;
                presence_ = value;
            }
        }
        /// <summary>Gets whether the "presence" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPresence
        {
            get { return (_hasBits0 & 16) != 0; }
        }
        /// <summary>Clears the value of the "presence" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPresence()
        {
            _hasBits0 &= ~16;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as NormalizedLandmark);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(NormalizedLandmark other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
            if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
            if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
            if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Visibility, other.Visibility)) return false;
            if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Presence, other.Presence)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (HasX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
            if (HasY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
            if (HasZ) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
            if (HasVisibility) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Visibility);
            if (HasPresence) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Presence);
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (HasX) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (HasY) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (HasZ) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (HasVisibility) {
        output.WriteRawTag(37);
        output.WriteFloat(Visibility);
      }
      if (HasPresence) {
        output.WriteRawTag(45);
        output.WriteFloat(Presence);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (HasX)
            {
                output.WriteRawTag(13);
                output.WriteFloat(X);
            }
            if (HasY)
            {
                output.WriteRawTag(21);
                output.WriteFloat(Y);
            }
            if (HasZ)
            {
                output.WriteRawTag(29);
                output.WriteFloat(Z);
            }
            if (HasVisibility)
            {
                output.WriteRawTag(37);
                output.WriteFloat(Visibility);
            }
            if (HasPresence)
            {
                output.WriteRawTag(45);
                output.WriteFloat(Presence);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (HasX)
            {
                size += 1 + 4;
            }
            if (HasY)
            {
                size += 1 + 4;
            }
            if (HasZ)
            {
                size += 1 + 4;
            }
            if (HasVisibility)
            {
                size += 1 + 4;
            }
            if (HasPresence)
            {
                size += 1 + 4;
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(NormalizedLandmark other)
        {
            if (other == null)
            {
                return;
            }
            if (other.HasX)
            {
                X = other.X;
            }
            if (other.HasY)
            {
                Y = other.Y;
            }
            if (other.HasZ)
            {
                Z = other.Z;
            }
            if (other.HasVisibility)
            {
                Visibility = other.Visibility;
            }
            if (other.HasPresence)
            {
                Presence = other.Presence;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
          case 37: {
            Visibility = input.ReadFloat();
            break;
          }
          case 45: {
            Presence = input.ReadFloat();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 13:
                        {
                            X = input.ReadFloat();
                            break;
                        }
                    case 21:
                        {
                            Y = input.ReadFloat();
                            break;
                        }
                    case 29:
                        {
                            Z = input.ReadFloat();
                            break;
                        }
                    case 37:
                        {
                            Visibility = input.ReadFloat();
                            break;
                        }
                    case 45:
                        {
                            Presence = input.ReadFloat();
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    /// Group of NormalizedLandmark protos.
    /// </summary>
    public sealed partial class NormalizedLandmarkList : pb::IMessage<NormalizedLandmarkList>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<NormalizedLandmarkList> _parser = new pb::MessageParser<NormalizedLandmarkList>(() => new NormalizedLandmarkList());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<NormalizedLandmarkList> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Akihabara.Framework.Protobuf.LandmarkReflection.Descriptor.MessageTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NormalizedLandmarkList()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NormalizedLandmarkList(NormalizedLandmarkList other) : this()
        {
            landmark_ = other.landmark_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NormalizedLandmarkList Clone()
        {
            return new NormalizedLandmarkList(this);
        }

        /// <summary>Field number for the "landmark" field.</summary>
        public const int LandmarkFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Akihabara.Framework.Protobuf.NormalizedLandmark> _repeated_landmark_codec
            = pb::FieldCodec.ForMessage(10, global::Akihabara.Framework.Protobuf.NormalizedLandmark.Parser);
        private readonly pbc::RepeatedField<global::Akihabara.Framework.Protobuf.NormalizedLandmark> landmark_ = new pbc::RepeatedField<global::Akihabara.Framework.Protobuf.NormalizedLandmark>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Akihabara.Framework.Protobuf.NormalizedLandmark> Landmark
        {
            get { return landmark_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as NormalizedLandmarkList);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(NormalizedLandmarkList other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!landmark_.Equals(other.landmark_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= landmark_.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      landmark_.WriteTo(output, _repeated_landmark_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            landmark_.WriteTo(ref output, _repeated_landmark_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            size += landmark_.CalculateSize(_repeated_landmark_codec);
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(NormalizedLandmarkList other)
        {
            if (other == null)
            {
                return;
            }
            landmark_.Add(other.landmark_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            landmark_.AddEntriesFrom(input, _repeated_landmark_codec);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            landmark_.AddEntriesFrom(ref input, _repeated_landmark_codec);
                            break;
                        }
                }
            }
        }
#endif

    }

    #endregion

}

#endregion Designer generated code
